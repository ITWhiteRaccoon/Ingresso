@page "/"

@using IngressoApi.Models
@using Microsoft.Extensions.Localization
@using RadarCine.Components.Shared
@using RadarCine.Services

@inject IStringLocalizer<Home> Localizer
@inject UserSelectionService SelectionService
@inject PageNavigator Navigator

<style>
    .home-container {
        /* Centraliza tudo verticalmente */
        display: flex;
        flex-direction: column;
        width: 100%;
        max-width: 800px;
        margin-left: auto;
        margin-right: auto;
        padding: 0 1rem;
        box-sizing: border-box;
    }

    .welcome-header {
        padding-top: 30vh;
        transition: all 0.6s ease-in-out;
    }

    .welcome-header h1 {
        transition: all 0.4s ease-out;
    }

    .welcome-header h2 {
        transition: all 0.6s ease-in-out;
    }

    .welcome-header p {
        opacity: 0;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease-in-out 0.3s, opacity 0.3s ease-in 0.3s;
    }

    .welcome-button {
        margin-top: 2rem;
        transition: all 0.4s ease-out;
    }

    .is-configuring .welcome-header {
        padding-top: 2rem;
        text-align: left;
    }

    .is-configuring .welcome-header h1 {
        opacity: 0;
        margin: 0;
    }

    .is-configuring .welcome-header p {
        opacity: 1;
        max-height: 70vh;
    }

    .is-configuring .welcome-button {
        opacity: 0;
        max-height: 0;
        overflow: hidden;
    }
</style>

<div class="home-container @(_isConfiguring ? "is-configuring" : "")">

    <div class="welcome-header">
        <h1>@Localizer["Greeting"]</h1>

        <h2>@Localizer["PageTitle"]</h2>

        <p>@Localizer["PageSubtitle"]</p>
    </div>

    <div class="welcome-button">
        <FluentButton Appearance="Appearance.Accent" OnClick="StartConfiguration">
            Próximo
        </FluentButton>
    </div>

    @* O componente de configuração só é renderizado quando ativado *@
    @if (_isConfiguring) {
        <SetupView/>
    }
</div>

@code {
    private bool _isConfiguring = false;

    private void StartConfiguration() {
        _isConfiguring = true;
    }

    protected async override void OnInitialized() {
        IEnumerable<Theater> theatersToStore = new List<Theater> {
            new() {
                Id = "1014",
                Name = "Cinemark Wallig",
                CityId = "5",
                CityName = "Porto Alegre",
                Uf = "RS"
            },
            new() {
                Id = "1614",
                Name = "Cinesystem Bourbon Shopping Country",
                CityId = "5",
                CityName = "Porto Alegre",
                Uf = "RS"
            }
        };
        SelectionService.StoreSelectedTheaters(theatersToStore);
        await Navigator.NavigateWithTransitionAsync("/Movies");
    }

}